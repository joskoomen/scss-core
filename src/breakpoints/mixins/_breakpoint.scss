@charset "UTF-8";

/// Wraps a media query around the content you put inside the mixin. This mixin accepts a number of values:
///  - If a string is passed, the mixin will look for it in the `$breakpoints` map, and use a media query there.
///  - If a pixel value is passed, it will be converted to an em value using `$global-font-size` as the base.
///  - If a rem value is passed, the unit will be changed to em.
///  - If an em value is passed, the value will be used as-is.
///
/// If multiple values are passed, the mixin will generate a media query for each of them as described above.
/// Since the content is duplicated for each breakpoint, this mixin should only be used with properties that
/// change across breakpoints.
///
/// @param {Keyword|Number} $values... - Breakpoint name or px/rem/em value to process.
///
/// @output If the breakpoint is "0px and lgr", outputs the content as-is. Otherwise, outputs the content wrapped in a media query.
@mixin breakpoint($values...) {
  @for $i from 1 through length($values) {
    $value: nth($values, $i);
    $str: breakpoint($value);
    $bp: index($-jk-breakpoints-keys, $value);
    $pbp: index($-jk-breakpoints-keys, $print-breakpoint);
    
    $old-jk-size: null;
    
    // Make breakpoint size available as a variable
    @if global-variable-exists(-jk-size) {
      $old-jk-size: $-jk-size;
    }
    $-jk-size: nth($value, 1) !global; // get the first value to account for `only` and `down` keywords
    
    // If $str is still an empty string, no media query is needed
    @if $str == '' {
      @content;
    }
      
      // Otherwise, wrap the content in a media query
    @else {
      // For named breakpoints less than or equal to $print-breakpoint, add print to the media types
      @if $bp != null and $bp <= $pbp {
        @media print, screen and #{$str} {
          @content;
        }
      } @else {
        @media screen and #{$str} {
          @content;
        }
      }
    }
    
    $-jk-size: $old-jk-size !global;
  }
}